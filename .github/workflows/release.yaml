on:
  release:
    types: [created]

permissions:
  contents: read

env:
  GO_VERSION: 1.23

jobs:
  binary-releases-matrix:
    name: release binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    permissions:
      contents: write
      id-token: write
    steps:
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - name: setup go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: ${{ env.GO_VERSION }}
      #- name: install cosign
      #  uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3
      - name: build
        run: |
          make production-build CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }}
      - name: create sha256
        run: |
          sha256sum ./bin/git-lost-and-found-${{ matrix.goos }}-${{ matrix.goarch }}  > ./bin/git-lost-and-found-${{ matrix.goos }}-${{ matrix.goarch }}.sha256
      - name: upload release
        env:
          GH_TOKEN: ${{ github.token }}
        run: | 
          gh release upload ${{ github.ref_name }} \
            ./bin/git-lost-and-found-${{ matrix.goos }}-${{ matrix.goarch }} \
            ./bin/git-lost-and-found-${{ matrix.goos }}-${{ matrix.goarch }}.sha256
  publish-docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
    env:
      TAG: "ghcr.io/${{ github.repository_owner }}/git-lost-and-found:${{ github.ref_name }}"
      LATEST: "ghcr.io/${{ github.repository_owner }}/git-lost-and-found:latest"
    steps:
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false
      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: setup qemu
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: setup buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
      - name: install cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3
      - name: docker build
        id: docker-build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ env.TAG }},${{ env.LATEST }}
      - name: sign image
        env:
          DIGEST: ${{ steps.docker-build.outputs.digest }}
        run: cosign sign --yes ${TAG}@${DIGEST} ${LATEST}@${DIGEST}